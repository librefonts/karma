# Bake Begins!
### (1 of 6) Copy sources
$ cp -a /home/travis/build/fontdirectory/karma/METADATA.json /home/travis/build/fontdirectory/karma/builds/build
$ cp -a /home/travis/build/fontdirectory/karma/DESCRIPTION.en_us.html /home/travis/build/fontdirectory/karma/builds/build
$ cp -a Karma-Medium.ttf.ttx Karma-Light.ttf.ttx Karma-Bold.ttf.ttx Karma-SemiBold.ttf.ttx Karma-Regular.ttf.ttx Karma-Medium.ttf.G_S_U_B_.ttx Karma-Medium.ttf.O_S_2f_2.ttx Karma-Medium.ttf._c_v_t.ttx Karma-Medium.ttf.F_F_T_M_.ttx Karma-Medium.ttf._n_a_m_e.ttx Karma-Medium.ttf._p_o_s_t.ttx Karma-Medium.ttf.G_D_E_F_.ttx Karma-Medium.ttf._m_a_x_p.ttx Karma-Medium.ttf._p_r_e_p.ttx Karma-Medium.ttf._h_h_e_a.ttx Karma-Medium.ttf._h_e_a_d.ttx Karma-Medium.ttf.G_P_O_S_.ttx Karma-Medium.ttf.D_S_I_G_.ttx Karma-Medium.ttf._f_p_g_m.ttx Karma-Medium.ttf.GlyphOrder.ttx Karma-Medium.ttf._h_m_t_x.ttx Karma-Medium.ttf._l_o_c_a.ttx Karma-Medium.ttf._g_l_y_f.ttx Karma-Medium.ttf._g_a_s_p.ttx Karma-Medium.ttf._c_m_a_p.ttx Karma-Light.ttf.G_S_U_B_.ttx Karma-Light.ttf._g_a_s_p.ttx Karma-Light.ttf._h_e_a_d.ttx Karma-Light.ttf._g_l_y_f.ttx Karma-Light.ttf._p_o_s_t.ttx Karma-Light.ttf._l_o_c_a.ttx Karma-Light.ttf._n_a_m_e.ttx Karma-Light.ttf._h_m_t_x.ttx Karma-Light.ttf._p_r_e_p.ttx Karma-Light.ttf.F_F_T_M_.ttx Karma-Light.ttf._f_p_g_m.ttx Karma-Light.ttf.GlyphOrder.ttx Karma-Light.ttf._h_h_e_a.ttx Karma-Light.ttf.D_S_I_G_.ttx Karma-Light.ttf.O_S_2f_2.ttx Karma-Light.ttf.G_P_O_S_.ttx Karma-Light.ttf._c_v_t.ttx Karma-Light.ttf.G_D_E_F_.ttx Karma-Light.ttf._c_m_a_p.ttx Karma-Light.ttf._m_a_x_p.ttx Karma-Bold.ttf.F_F_T_M_.ttx Karma-Bold.ttf.O_S_2f_2.ttx Karma-Bold.ttf.G_D_E_F_.ttx Karma-Bold.ttf._f_p_g_m.ttx Karma-Bold.ttf.GlyphOrder.ttx Karma-Bold.ttf._p_o_s_t.ttx Karma-Bold.ttf._g_a_s_p.ttx Karma-Bold.ttf._l_o_c_a.ttx Karma-Bold.ttf._h_m_t_x.ttx Karma-Bold.ttf._c_m_a_p.ttx Karma-Bold.ttf._g_l_y_f.ttx Karma-Bold.ttf._m_a_x_p.ttx Karma-Bold.ttf._p_r_e_p.ttx Karma-Bold.ttf._c_v_t.ttx Karma-Bold.ttf.D_S_I_G_.ttx Karma-Bold.ttf._h_e_a_d.ttx Karma-Bold.ttf.G_S_U_B_.ttx Karma-Bold.ttf._h_h_e_a.ttx Karma-Bold.ttf.G_P_O_S_.ttx Karma-Bold.ttf._n_a_m_e.ttx Karma-SemiBold.ttf._l_o_c_a.ttx Karma-SemiBold.ttf.G_P_O_S_.ttx Karma-SemiBold.ttf._f_p_g_m.ttx Karma-SemiBold.ttf._g_a_s_p.ttx Karma-SemiBold.ttf._h_m_t_x.ttx Karma-SemiBold.ttf._g_l_y_f.ttx Karma-SemiBold.ttf.GlyphOrder.ttx Karma-SemiBold.ttf._c_m_a_p.ttx Karma-SemiBold.ttf.G_S_U_B_.ttx Karma-SemiBold.ttf.D_S_I_G_.ttx Karma-SemiBold.ttf._h_h_e_a.ttx Karma-SemiBold.ttf.O_S_2f_2.ttx Karma-SemiBold.ttf._n_a_m_e.ttx Karma-SemiBold.ttf._p_o_s_t.ttx Karma-SemiBold.ttf._h_e_a_d.ttx Karma-SemiBold.ttf.F_F_T_M_.ttx Karma-SemiBold.ttf._m_a_x_p.ttx Karma-SemiBold.ttf._p_r_e_p.ttx Karma-SemiBold.ttf._c_v_t.ttx Karma-SemiBold.ttf.G_D_E_F_.ttx Karma-Regular.ttf.G_P_O_S_.ttx Karma-Regular.ttf._c_v_t.ttx Karma-Regular.ttf.GlyphOrder.ttx Karma-Regular.ttf._c_m_a_p.ttx Karma-Regular.ttf._n_a_m_e.ttx Karma-Regular.ttf.O_S_2f_2.ttx Karma-Regular.ttf._h_e_a_d.ttx Karma-Regular.ttf.G_S_U_B_.ttx Karma-Regular.ttf._p_r_e_p.ttx Karma-Regular.ttf.F_F_T_M_.ttx Karma-Regular.ttf._p_o_s_t.ttx Karma-Regular.ttf.G_D_E_F_.ttx Karma-Regular.ttf._g_a_s_p.ttx Karma-Regular.ttf._h_m_t_x.ttx Karma-Regular.ttf._l_o_c_a.ttx Karma-Regular.ttf._h_h_e_a.ttx Karma-Regular.ttf._g_l_y_f.ttx Karma-Regular.ttf._f_p_g_m.ttx Karma-Regular.ttf._m_a_x_p.ttx Karma-Regular.ttf.D_S_I_G_.ttx /home/travis/build/fontdirectory/karma/builds/build/sources
### (2 of 6) pyfontaine
### (3 of 6) Run upstream tests
$ fontbakery-check.py upstream-repo sources
$ fontaine --collections subsets --text /home/travis/build/fontdirectory/karma/builds/build/sources/Karma-Medium.ttf.ttx /home/travis/build/fontdirectory/karma/builds/build/sources/Karma-Light.ttf.ttx /home/travis/build/fontdirectory/karma/builds/build/sources/Karma-Bold.ttf.ttx /home/travis/build/fontdirectory/karma/builds/build/sources/Karma-SemiBold.ttf.ttx /home/travis/build/fontdirectory/karma/builds/build/sources/Karma-Regular.ttf.ttx > fontaine.txt
WARNING: Please install [PyICU](https://pypi.python.org/pypi/PyICU) toenable [feature], perhaps with: pip install pyicu
end of pyfontaine process
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_contours(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_points(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_test_prepolation_glyph_names(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_bakery_yaml_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_copyright_notices_same_across_family(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_description_html_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_fontlog_txt_exists(): FAIL
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_metadata_json_exists(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_component(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_mark_to_mark(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_own_glyphs(): OK
$ fontbakery-check.py upstream-ttx Karma-Medium.ttf.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/karma/builds/build/sources/Karma-Medium.ttf.ttx /home/travis/build/fontdirectory/karma/builds/build/sources/KarmaMedium-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ fontbakery-check.py upstream-ttx Karma-Light.ttf.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/karma/builds/build/sources/Karma-Light.ttf.ttx /home/travis/build/fontdirectory/karma/builds/build/sources/KarmaLight-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ fontbakery-check.py upstream-ttx Karma-Bold.ttf.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/karma/builds/build/sources/Karma-Bold.ttf.ttx /home/travis/build/fontdirectory/karma/builds/build/sources/KarmaBold-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ fontbakery-check.py upstream-ttx Karma-SemiBold.ttf.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/karma/builds/build/sources/Karma-SemiBold.ttf.ttx /home/travis/build/fontdirectory/karma/builds/build/sources/KarmaSemibold-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ fontbakery-check.py upstream-ttx Karma-Regular.ttf.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/karma/builds/build/sources/Karma-Regular.ttf.ttx /home/travis/build/fontdirectory/karma/builds/build/sources/KarmaRegular-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
### (4 of 6) Convert sources to TTF
$ ttx -d /home/travis/build/fontdirectory/karma/builds/build /home/travis/build/fontdirectory/karma/builds/build/sources/KarmaLight-Regular.ttx /home/travis/build/fontdirectory/karma/builds/build/sources/KarmaBold-Regular.ttx /home/travis/build/fontdirectory/karma/builds/build/sources/KarmaMedium-Regular.ttx /home/travis/build/fontdirectory/karma/builds/build/sources/KarmaRegular-Regular.ttx /home/travis/build/fontdirectory/karma/builds/build/sources/KarmaSemibold-Regular.ttx
Compiling "/home/travis/build/fontdirectory/karma/builds/build/sources/KarmaLight-Regular.ttx" to "/home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'DSIG' table...
Compiling "/home/travis/build/fontdirectory/karma/builds/build/sources/KarmaBold-Regular.ttx" to "/home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'DSIG' table...
Compiling "/home/travis/build/fontdirectory/karma/builds/build/sources/KarmaMedium-Regular.ttx" to "/home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'DSIG' table...
Compiling "/home/travis/build/fontdirectory/karma/builds/build/sources/KarmaRegular-Regular.ttx" to "/home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'DSIG' table...
Compiling "/home/travis/build/fontdirectory/karma/builds/build/sources/KarmaSemibold-Regular.ttx" to "/home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'DSIG' table...
### Test KarmaLight-Regular.ttf
$ fontbakery-check.py result KarmaLight-Regular.ttf
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): FAIL
$ fontbakery-fix-ascii-fontmetadata.py /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): FAIL
$ fontbakery-fix-vertical-metrics.py --autofix /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf
$ fontbakery-fix-vertical-metrics.py /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf
Parameter              KarmaMedium-Regular.ttf    KarmaLight-Regular.ttf    KarmaBold-Regular.ttf    KarmaSemibold-Regular.ttf    KarmaRegular-Regular.ttf    
ymax                   945                        945                       982                      950                          945                         
hhea.ascent            982                        982                       982                      982                          982                         
OS/2.sTypoAscender     982                        982                       982                      982                          982                         
OS/2.usWinAscent       982                        982                       982                      982                          982                         
ymin                   -548                       -474                      -646                     -594                         -508                        
hhea.descent           -646                       -646                      -646                     -646                         -646                        
OS/2.sTypoDescender    -646                       -646                      -646                     -646                         -646                        
OS/2.usWinDescent      646                        646                       646                      646                          646                         
hhea.lineGap           0                          0                         0                        0                            0                           
OS/2.sTypoLineGap      0                          0                         0                        0                            0                           
hhea total             1628                       1628                      1628                     1628                         1628                        
typo total             1628                       1628                      1628                     1628                         1628                        
win total              1628                       1628                      1628                     1628                         1628                        
UPM:Heights            1000:1493                  1000:1419                 1000:1628                1000:1544                    1000:1453                   
UPM:Heights %          149 %                      141 %                     162 %                    154 %                        145 %                       


bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): FAIL
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
Warning: Mac string is a subset of the Windows string in the 'name' table
 for the Preferred Family string in the English (US) language.
Warning: Mac and Windows entries in the 'name' table differ for the
 Preferred Styles string in the language English (US)
 Mac String: Light
Windows String: Regular
The glyph named dotlessj is mapped to U+F6BE.
But its name indicates it should be mapped to U+0237.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
### Optimize TTF KarmaLight-Regular.ttf
$ ls -l 'KarmaLight-Regular.ttf'* # look at the size savings of that subset process
KarmaLight-Regular.ttf.opt: 291828 bytes
KarmaLight-Regular.ttf: 309028 bytes
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf.opt /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf
### Autohint TTFs (ttfautohint) KarmaLight-Regular.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf '/home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf: 291828 bytes
/home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.autohint.ttf: 288952 bytes
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.autohint.ttf /home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf
### Subset TTFs (pyftsubset) KarmaLight-Regular.ttf
$ pyftsubset KarmaLight-Regular.latin
$ pyftsubset KarmaLight-Regular.menu
strippedname:/home/travis/build/fontdirectory/karma/builds/build/KarmaLight-Regular.ttf
### Test KarmaBold-Regular.ttf
$ fontbakery-check.py result KarmaBold-Regular.ttf
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): FAIL
$ fontbakery-fix-ascii-fontmetadata.py /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): FAIL
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
Warning: Mac string is a subset of the Windows string in the 'name' table
 for the Preferred Family string in the English (US) language.
Warning: Mac and Windows entries in the 'name' table differ for the
 Preferred Styles string in the language English (US)
 Mac String: Bold
Windows String: Regular
The glyph named dotlessj is mapped to U+F6BE.
But its name indicates it should be mapped to U+0237.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
### Optimize TTF KarmaBold-Regular.ttf
$ ls -l 'KarmaBold-Regular.ttf'* # look at the size savings of that subset process
KarmaBold-Regular.ttf.opt: 323392 bytes
KarmaBold-Regular.ttf: 340588 bytes
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf.opt /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf
### Autohint TTFs (ttfautohint) KarmaBold-Regular.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf '/home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf: 323392 bytes
/home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.autohint.ttf: 319224 bytes
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.autohint.ttf /home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf
### Subset TTFs (pyftsubset) KarmaBold-Regular.ttf
$ pyftsubset KarmaBold-Regular.latin
$ pyftsubset KarmaBold-Regular.menu
strippedname:/home/travis/build/fontdirectory/karma/builds/build/KarmaBold-Regular.ttf
### Test KarmaMedium-Regular.ttf
$ fontbakery-check.py result KarmaMedium-Regular.ttf
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): FAIL
$ fontbakery-fix-ascii-fontmetadata.py /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): FAIL
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
Warning: Mac string is a subset of the Windows string in the 'name' table
 for the Preferred Family string in the English (US) language.
Warning: Mac and Windows entries in the 'name' table differ for the
 Preferred Styles string in the language English (US)
 Mac String: Medium
Windows String: Regular
The glyph named dotlessj is mapped to U+F6BE.
But its name indicates it should be mapped to U+0237.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
### Optimize TTF KarmaMedium-Regular.ttf
$ ls -l 'KarmaMedium-Regular.ttf'* # look at the size savings of that subset process
KarmaMedium-Regular.ttf.opt: 312868 bytes
KarmaMedium-Regular.ttf: 330072 bytes
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf.opt /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf
### Autohint TTFs (ttfautohint) KarmaMedium-Regular.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf '/home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf: 312868 bytes
/home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.autohint.ttf: 309092 bytes
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.autohint.ttf /home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf
### Subset TTFs (pyftsubset) KarmaMedium-Regular.ttf
$ pyftsubset KarmaMedium-Regular.latin
$ pyftsubset KarmaMedium-Regular.menu
strippedname:/home/travis/build/fontdirectory/karma/builds/build/KarmaMedium-Regular.ttf
### Test KarmaRegular-Regular.ttf
$ fontbakery-check.py result KarmaRegular-Regular.ttf
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): FAIL
$ fontbakery-fix-ascii-fontmetadata.py /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): FAIL
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
Warning: Mac string is a subset of the Windows string in the 'name' table
 for the Preferred Family string in the English (US) language.
The glyph named dotlessj is mapped to U+F6BE.
But its name indicates it should be mapped to U+0237.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
### Optimize TTF KarmaRegular-Regular.ttf
$ ls -l 'KarmaRegular-Regular.ttf'* # look at the size savings of that subset process
KarmaRegular-Regular.ttf.opt: 316680 bytes
KarmaRegular-Regular.ttf: 333868 bytes
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf.opt /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf
### Autohint TTFs (ttfautohint) KarmaRegular-Regular.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf '/home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf: 316680 bytes
/home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.autohint.ttf: 312880 bytes
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.autohint.ttf /home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf
### Subset TTFs (pyftsubset) KarmaRegular-Regular.ttf
$ pyftsubset KarmaRegular-Regular.latin
$ pyftsubset KarmaRegular-Regular.menu
strippedname:/home/travis/build/fontdirectory/karma/builds/build/KarmaRegular-Regular.ttf
### Test KarmaSemibold-Regular.ttf
$ fontbakery-check.py result KarmaSemibold-Regular.ttf
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): FAIL
$ fontbakery-fix-ascii-fontmetadata.py /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): FAIL
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
Warning: Mac string is a subset of the Windows string in the 'name' table
 for the Preferred Family string in the English (US) language.
Warning: Mac and Windows entries in the 'name' table differ for the
 Preferred Styles string in the language English (US)
 Mac String: Semibold
Windows String: Regular
The glyph named dotlessj is mapped to U+F6BE.
But its name indicates it should be mapped to U+0237.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf.fix /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
### Optimize TTF KarmaSemibold-Regular.ttf
$ ls -l 'KarmaSemibold-Regular.ttf'* # look at the size savings of that subset process
KarmaSemibold-Regular.ttf.opt: 312688 bytes
KarmaSemibold-Regular.ttf: 329900 bytes
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf.opt /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf
### Autohint TTFs (ttfautohint) KarmaSemibold-Regular.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf '/home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf: 312688 bytes
/home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.autohint.ttf: 309052 bytes
$ mv /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.autohint.ttf /home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf
### Subset TTFs (pyftsubset) KarmaSemibold-Regular.ttf
$ pyftsubset KarmaSemibold-Regular.latin
$ pyftsubset KarmaSemibold-Regular.menu
strippedname:/home/travis/build/fontdirectory/karma/builds/build/KarmaSemibold-Regular.ttf
### (5 of 6) Generate METADATA.json (fontbakery-build-metadata.py)
$ fontbakery-build-metadata.py /home/travis/build/fontdirectory/karma/builds/build
{} exists
Designer's name from font is: Joana Correia
Original size: 309092\nGzip size: 150572
Family Name: Karma
PS Name: Karma-Medium
Full Name: Karma Medium
Style: normal
Weight: 500
Filename: KarmaMedium-Regular.ttf
Copyright: Copyright 2014 Indian Type Foundry. All rights reserved.
Family Name: Karma
PS Name: Karma-Light
Full Name: Karma Light
Style: normal
Weight: 300
Filename: KarmaLight-Regular.ttf
Copyright: Copyright 2014 Indian Type Foundry. All rights reserved.
Family Name: Karma
PS Name: Karma-Bold
Full Name: Karma Bold
Style: normal
Weight: 700
Filename: KarmaBold-Regular.ttf
Copyright: Copyright 2014 Indian Type Foundry. All rights reserved.
Family Name: Karma
PS Name: Karma-Semibold
Full Name: Karma Semibold
Style: normal
Weight: 600
Filename: KarmaSemibold-Regular.ttf
Copyright: Copyright 2014 Indian Type Foundry. All rights reserved.
Family Name: Karma
PS Name: Karma-Regular
Full Name: Karma Regular
Style: normal
Weight: 400
Filename: KarmaRegular-Regular.ttf
Copyright: Copyright 2014 Indian Type Foundry. All rights reserved.
### (6 of 6) Run tests for METADATA.json
$ fontbakery-check.py metadata METADATA.json
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_devanagari(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin_ext(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_menu(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_more_than_500b(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_valid_html(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_daltonmaag_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontbureau_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontscom_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontshop_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontsmith_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_houseind_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_myfonts_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_veer_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_family_is_listed_in_gwf(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_atleast_latin_menu_subsets_exist(): OK
/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_lint/tests/metadata_test.py:141: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
  self.assertTrue(designer in designers,
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_designer_exists_in_profiles_csv(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_items_dicts(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_no_dupes(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_has_unique_style_weight_pairs(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_license(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_no_unknown_top_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_subsets_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_top_keys_types(): OK
bakery_lint.tests.downstream.test_check_font_name_not_in_camelcase.CheckFontNameNotInCamelCase.test_fontname_not_in_camel_case(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_copyrighttxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_description_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_fontlogtxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_licensetxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_canonical_weights.CheckCanonicalWeights.test_check_canonical_weights(): ERROR
bakery_lint.tests.downstream.test_check_canonical_weights.CheckPostScriptNameMatchesWeight.test_postscriptname_contains_correct_weight(): FAIL
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFontWeightSameAsInMetadata.test_font_weight_same_as_in_metadata(): ERROR
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFullNameEqualCanonicalName.test_metadata_contains_current_font(): ERROR
bakery_lint.tests.downstream.test_check_monospace_agreements.CheckMonospaceAgreement.test_check_monospace_agreement(): OK
bakery_lint.tests.downstream.test_check_subsets_exists.CheckSubsetsExist.test_check_subsets_exists(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_contains_correct_rfn(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_is_consistent_across_family(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_matches_pattern(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_metadata_copyright_size(): OK
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckItalicStyleMatchesMacStyle.test_check_italic_style_matches_names(): OK
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckNormalStyleMatchesMacStyle.test_check_normal_style_matches_names(): ERROR
bakery_lint.tests.downstream.test_check_familyname_matches_fontnames.CheckFamilyNameMatchesFontNames.test_check_familyname_matches_fontnames(): OK
bakery_lint.tests.downstream.test_check_canonical_styles.CheckCanonicalStyles.test_check_canonical_styles(): ERROR
bakery_lint.tests.downstream.test_check_menu_contains_proper_glyphs.CheckMenuSubsetContainsProperGlyphs.test_check_menu_contains_proper_glyphs(): ERROR
bakery_lint.tests.downstream.test_metadata_agreements.TestFontOnDiskFamilyEqualToMetadataJSON.test_font_on_disk_family_equal_in_metadata_json(): OK
bakery_lint.tests.downstream.test_metadata_agreements.TestPostScriptNameInMetadataEqualFontOnDisk.test_postscriptname_in_metadata_equal_to_font_on_disk(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_font_name_matches_family(): ERROR
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_family_values_are_all_the_same(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_filename_matches_postscriptname(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_font_have_regular(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fonts_fields_have_fontname(): ERROR
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_is_equal_to_internal_font_fullname(): ERROR
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_matches_postScriptName(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_400(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_normal(): OK
bakery_lint.tests.downstream.test_check_canonical_filenames.CheckCanonicalFilenames.test_check_canonical_filenames(): OK
bakery_lint.tests.downstream.test_check_files_menu_agreements.CheckFontsMenuAgreements.test_menu_file_agreement(): FAIL
bakery_lint.tests.downstream.test_check_metadata_fields.CheckMetadataFields.test_check_metadata_fields(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_encodings_of_glyphs_across_family(): ERROR
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_names_of_glyphs_across_family(): ERROR
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_number_of_glyphs_across_family(): ERROR
bakery_lint.tests.downstream.test_check_metadata_matches_nametable.CheckMetadataMatchesNameTable.test_check_metadata_matches_nametable(): ERROR
{
  "name": "Karma", 
  "designer": "Indian Type Foundry", 
  "license": "OFL", 
  "visibility": "External", 
  "category": "Serif", 
  "size": 164156, 
  "fonts": [
    {
      "name": "Karma", 
      "postScriptName": "Karma-Medium", 
      "fullName": "Karma Medium", 
      "style": "normal", 
      "weight": 500, 
      "filename": "KarmaMedium-Regular.ttf", 
      "copyright": "Copyright 2014 Indian Type Foundry. All rights reserved."
    }, 
    {
      "name": "Karma", 
      "postScriptName": "Karma-Light", 
      "fullName": "Karma Light", 
      "style": "normal", 
      "weight": 300, 
      "filename": "KarmaLight-Regular.ttf", 
      "copyright": "Copyright 2014 Indian Type Foundry. All rights reserved."
    }, 
    {
      "name": "Karma", 
      "postScriptName": "Karma-Bold", 
      "fullName": "Karma Bold", 
      "style": "normal", 
      "weight": 700, 
      "filename": "KarmaBold-Regular.ttf", 
      "copyright": "Copyright 2014 Indian Type Foundry. All rights reserved."
    }, 
    {
      "name": "Karma", 
      "postScriptName": "Karma-Semibold", 
      "fullName": "Karma Semibold", 
      "style": "normal", 
      "weight": 600, 
      "filename": "KarmaSemibold-Regular.ttf", 
      "copyright": "Copyright 2014 Indian Type Foundry. All rights reserved."
    }, 
    {
      "name": "Karma", 
      "postScriptName": "Karma-Regular", 
      "fullName": "Karma Regular", 
      "style": "normal", 
      "weight": 400, 
      "filename": "KarmaRegular-Regular.ttf", 
      "copyright": "Copyright 2014 Indian Type Foundry. All rights reserved."
    }
  ], 
  "subsets": [
    "latin", 
    "menu"
  ], 
  "dateAdded": "2014-06-25"
}
